/*
 * @Descripttion: 打开koroFileHeader查看配置 进行设置: https://github.com/OBKoro1/koro1FileHeader/wiki/%E9%85%8D%E7%BD%AE
 * @version: April 2021 (version 1.56)
 * @Author: ZhangKe
 * @Date: 2022-05-07 10:10:32
 * @LastEditors: ZhangKe
 * @LastEditTime: 2022-05-07 12:46:54
 * @FilePath: \20_Vue2.0\64_组件的自定义属性props.js
 */
// 组件的 prop
// prop 是组件的自定义属性，在封装通用组件的时候，合理地使用 prop 可以极大地提高组件的复用性。

// export default {
//     组件的自定义属性
//     props: ['自定义属性1', '自定义属性2', '自定义属性...' ],
//     组件的私有属性
//     data() {
//         return {
//             count: 0
//         }
//     },
// }

// -----------------------------------------------------

// props 是只读的：
// vue 规定：组件中封装的自定义属性是只读的，程序员不能直接修改 props 的值，否则会直接报错。

// 要想修改 props 的值，可以把 props 得知转存到 data 中，因为 data 中的数据都是可读可写的。

// data() {
//         return {
//             count: this.init
//         }
//     },

// -------------------------------------------------------

// props 的 default 默认值：
// 在声明自定义属性时，可以通过 default 来定义属性的默认值。

// props: {
//         init: {
            // 如果外界使用 Count 组件的时候，没有传递 init 属性，则默认值会生效。
//             default: 12
//         }
//     }


// --------------------------------------------------------

// props 的 type 值类型：
// 在声明自定义属性时， 可以通过 type 来定义属性的值类型。

    // props: {
    //     init: {
            // 如果外界使用 Count 组件的时候，没有传递 init 属性，则默认值会生效。
    //         default: 12,
            // 用 type 属性定义属性的值类型
            // 如果传递过来的值不符合此类型，则会在终端报错。
    //         type: Number,
    //     }
    // }

// ----------------------------------------------------------

// props 的 required 必填项:
// 在声明自定义属性时，可以通过 required 选项，将属性设置为必填项，强制用户必须传递属性的值。


// --------------------------------------------------------

// 注意点： props 属性可以为开发者, 指定复用组件的初始值。
// 1. props 中的数据可以直接在模板结构中使用; 
// 2. 结合 v-bind: ，来使用 prop 自定义属性, 定义 number;
// 3. 自定义属性是只读的, 要想修改 props 的值，可以把 props 得知转存到 data 中;
// 4. 在声明自定义属性时，可以通过 default 来定义属性的默认值。
// 5. 在声明自定义属性时,可以通过 type 来定义属性的值类型, 如果传递过来的值不符合此类型，则会在终端报错。(所以说， 有什么用。)
// 6. 必填项校验 required. (看不出有什么实际的作用)